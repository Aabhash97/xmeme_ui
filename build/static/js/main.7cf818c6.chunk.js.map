{"version":3,"sources":["Components/Themes.js","Components/Globalstyle.js","Components/Toggler.js","meme2.png","service/XmemeService.js","Components/FormComponent.jsx","Components/emoji.jsx","Components/UpdateComponent.jsx","Components/ImageFeed.jsx","Components/FooterComponenet.jsx","App.js","Components/useDarkMode.js","reportWebVitals.js","index.js"],"names":["lightTheme","body","text","toggleBorder","background","darkTheme","GlobalStyles","createGlobalStyle","theme","Button","styled","button","Sun","svg","Moon","Toggle","toggleTheme","onClick","xmlns","width","height","viewBox","style","fill","d","url","a","result","data","message","type","axios","get","then","response","status","catch","error","console","log","request","memes","post","id","patch","schema","yup","shape","name","required","caption","matches","FormComponent","useToasts","addToast","useForm","resolver","yupResolver","register","handleSubmit","errors","useState","meme","setMeme","handleInputChange","event","target","value","React","open","setOpen","handleClose","ripple","onPress","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","Form","Group","controlId","Label","Control","placeholder","onChange","ref","DialogActions","variant","XmemeService","submitMemes","emojis","count","ReactingComponent","state","this","map","emoji","setState","concat","reactions","onReaction","onEmojiClick","Component","UpdateComponent","props","useEffect","getMemes","getMemesById","IconButton","aria-label","disabled","UpdateMemes","useStyles","makeStyles","root","maxWidth","media","paddingTop","avatar","backgroundColor","red","spacing","ImageFeed","classes","setmemes","useLayoutEffect","appearance","autoDismiss","elem","padding","Grid","container","direction","justify","alignItems","item","xs","Card","className","CardHeader","Avatar","charAt","action","title","CardMedia","image","CardContent","Typography","color","component","CardActions","disableSpacing","FooterComponenet","href","App","setTheme","mountedComponent","setMountedComponent","setMode","mode","window","localStorage","setItem","localTheme","getItem","useDarkMode","themeToggler","themeMode","Navbar","Brand","src","logo","alt","sm","steps","loop","wrapper","Divider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7cf818c6.chunk.js","sourcesContent":["export const lightTheme = {\r\n    body: '#FFF',\r\n    text: '#363537',\r\n    toggleBorder: '#FFF',\r\n    background: 'linear-gradient(#39598A, #79D7ED)',\r\n  }\r\n  \r\n  export const darkTheme = {\r\n    body: '#363537',\r\n    text: '#FAFAFA',\r\n    toggleBorder: '#6B8096',\r\n    background: '#999',\r\n  }","import { createGlobalStyle} from \"styled-components\"\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n  body {\r\n    background: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n    font-family: \"Stalinist One\";\r\n    transition: all 0.50s linear;\r\n  }\r\n  `","import React from 'react'\r\nimport { func, string } from 'prop-types';\r\nimport styled from \"styled-components\"\r\n\r\nconst Button = styled.button`\r\n  \r\n  border: 2px solid ${({ theme }) => theme.toggleBorder};\r\n  border-radius: 12px;\r\n  cursor: pointer;\r\n  font-size: 0.5rem;\r\n  justify-content: space-between;\r\n  margin: 0 auto;\r\n  overflow: hidden;\r\n  padding: rem;\r\n  position: relative;\r\n  width: 3.5rem;\r\n  height: 3.5rem;\r\n  outline: none;\r\n  }\r\n\r\n`;\r\n\r\nconst Sun = styled.svg`\r\n height: 2rem;\r\n width: 2rem;\r\n transition: all 0.7s linear;\r\n`;\r\n\r\nconst Moon = styled.svg`\r\n  height: 1.5rem;\r\n  width: 1.5rem;\r\n  transition: all 0.7s linear;\r\n`\r\n\r\nconst Toggle = ({theme,  toggleTheme }) => {\r\n    return (\r\n      <Button onClick={toggleTheme}>\r\n        {theme === \"light\" ?\r\n          <Moon xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"0 0 24 24\"><path style={{ fill: \"#F6C358\" }} d=\"M10.719 2.082c-2.572 2.028-4.719 5.212-4.719 9.918 0 4.569 1.938 7.798 4.548 9.895-4.829-.705-8.548-4.874-8.548-9.895 0-5.08 3.808-9.288 8.719-9.918zm1.281-2.082c-6.617 0-12 5.383-12 12s5.383 12 12 12c1.894 0 3.87-.333 5.37-1.179-3.453-.613-9.37-3.367-9.37-10.821 0-7.555 6.422-10.317 9.37-10.821-1.74-.682-3.476-1.179-5.37-1.179zm0 10.999c1.437.438 2.562 1.564 2.999 3.001.44-1.437 1.565-2.562 3.001-3-1.436-.439-2.561-1.563-3.001-3-.437 1.436-1.562 2.561-2.999 2.999zm8.001.001c.958.293 1.707 1.042 2 2.001.291-.959 1.042-1.709 1.999-2.001-.957-.292-1.707-1.042-2-2-.293.958-1.042 1.708-1.999 2zm-1-9c-.437 1.437-1.563 2.562-2.998 3.001 1.438.44 2.561 1.564 3.001 3.002.437-1.438 1.563-2.563 2.996-3.002-1.433-.437-2.559-1.564-2.999-3.001z\" /></Moon>\r\n          : <Sun xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"0 0 24 24\"><path style={{ fill: \"#F6C358\" }} d=\"M12 9c1.654 0 3 1.346 3 3s-1.346 3-3 3-3-1.346-3-3 1.346-3 3-3zm0-2c-2.762 0-5 2.238-5 5s2.238 5 5 5 5-2.238 5-5-2.238-5-5-5zm0-2c.34 0 .672.033 1 .08v-2.08h-2v2.08c.328-.047.66-.08 1-.08zm-4.184 1.401l-1.472-1.473-1.414 1.415 1.473 1.473c.401-.537.876-1.013 1.413-1.415zm9.782 1.414l1.473-1.473-1.414-1.414-1.473 1.473c.537.402 1.012.878 1.414 1.414zm-5.598 11.185c-.34 0-.672-.033-1-.08v2.08h2v-2.08c-.328.047-.66.08-1 .08zm4.185-1.402l1.473 1.473 1.415-1.415-1.473-1.472c-.403.536-.879 1.012-1.415 1.414zm-11.185-5.598c0-.34.033-.672.08-1h-2.08v2h2.08c-.047-.328-.08-.66-.08-1zm13.92-1c.047.328.08.66.08 1s-.033.672-.08 1h2.08v-2h-2.08zm-12.519 5.184l-1.473 1.473 1.414 1.414 1.473-1.473c-.536-.402-1.012-.877-1.414-1.414z\" /></Sun>}\r\n      </Button>\r\n    );\r\n};\r\n\r\nToggle.propTypes = {\r\n    theme: string.isRequired,\r\n    toggleTheme: func.isRequired,\r\n}\r\n\r\nexport default Toggle;","export default __webpack_public_path__ + \"static/media/meme2.a55ad95b.png\";","import axios from \"axios\";\r\nconst url = \"https://xmeme-api10.herokuapp.com/memes\";\r\n\r\nclass XmemeService {\r\n  async getMemes() {\r\n    let result = {\r\n      data: [],\r\n      message: \"\",\r\n      type: \"\",\r\n    };\r\n    await axios\r\n      .get(url)\r\n      .then((response) => {\r\n        result.data = response.data;\r\n        if (response.status === 200 ) {\r\n          result.message = \"Welcome to XMEME STTREAMER\";\r\n          result.type = \"Success\";\r\n        }\r\n      })\r\n      .catch(function handle(error) {\r\n        result.type = \"Error\";\r\n        if (error.response) {\r\n          result.message = \"Some Error has been occured\";\r\n          console.log(\"Some Error has been occured\");\r\n        } else if (error.request) {\r\n          result.message = \"Cannot connect to API\";\r\n          console.log(error.request);\r\n        } else {\r\n          console.log(\"Error\", result.message);\r\n          result.message = \"Some Error has been Occured\";\r\n        }\r\n      });\r\n    return result;\r\n  }\r\n\r\n  async submitMemes(memes) {\r\n    let result = {\r\n      message: \"\",\r\n      type: \"\"\r\n    };\r\n    await axios\r\n      .post(url, memes)\r\n      .then(response => {\r\n        result.message = \"Meme Recieved\";\r\n        result.type = \"Success\";    \r\n      })\r\n      .catch(function handle(error) {\r\n        result.type = \"Error\";\r\n        if (error.response) {\r\n          if (error.response.status === 409) {\r\n            result.message = \"Meme already EXist\";\r\n            console.log(\"Some Error has been occured\");\r\n          } else {\r\n            result.message = \"Memes Cannot be Sumited\";\r\n          }\r\n        } else if (error.request) {\r\n          result.message = \"Cannot connect to API\";\r\n          console.log(error.request);\r\n        } else {\r\n          console.log(\"Error\", error.message);\r\n          result.message = \"Meme not created Unknown error\";\r\n        }\r\n      });\r\n  }\r\n\r\n  async UpdateMemes(memes, id) {\r\n    let result = {\r\n      data: [],\r\n      message: \"\",\r\n      type: \"\",\r\n    };\r\n    await axios.patch(url + \"/\" + id, memes).then(response => {\r\n      result.message = \"Meme Recieved\";\r\n      result.type = \"Success\";\r\n    }).catch(function handle(error) {\r\n      result.type = \"Error\";\r\n      if (error.response) {\r\n        if (error.response.status === 409) {\r\n          result.message = \"Meme already EXist\";\r\n          console.log(\"Some Error has been occured\");\r\n        }\r\n        else if (error.response.status ===404)\r\n        {\r\n          result.message = \"Meme not Found\"\r\n        } \r\n        else {\r\n          result.message = \"Memes Cannot be Sumited\";\r\n        }\r\n      } else if (error.request) {\r\n        result.message = \"Cannot connect to API\";\r\n        console.log(error.request);\r\n      } else {\r\n        console.log(\"Error\", error.message);\r\n        result.message = \"Meme not Updated Unknown error\";\r\n      }\r\n    });\r\n  }\r\n\r\n  async getMemesById(id) {\r\n    let result = {\r\n      data: [],\r\n      message: \"\",\r\n      type: \"\",\r\n    };\r\n    await axios.get(url + \"/\" + id).then((response) => {\r\n      result.data = response.data;\r\n      if (response.status === 200) {\r\n        result.message = \"Meme Recieved\";\r\n        result.type = \"Success\";\r\n      }\r\n    }).catch(function handle(error) {\r\n      result.type = \"Error\";\r\n      if (error.response) {\r\n        if (error.response.status === 404) {\r\n          result.message = \"Meme Not Found\";\r\n          console.log(\"Some Error has been occured\");\r\n        } else {\r\n          result.message = \"Memes Cannot be Sumited\";\r\n        }\r\n      } else if (error.request) {\r\n        result.message = \"Cannot connect to API\";\r\n        console.log(error.request);\r\n      } else {\r\n        console.log(\"Error\", error.message);\r\n        result.message = \"Meme not Fetched Unknown error\";\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n}\r\nexport default new XmemeService();\r\n","import Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport React from \"react\";\r\nimport XmemeService from \"../service/XmemeService\";\r\nimport { useState } from \"react\";\r\nimport \"react-awesome-button/dist/styles.css\";\r\nimport { AwesomeButton } from \"react-awesome-button\";\r\nimport styles from \"../theme-blue.css\";\r\nimport * as yup from \"yup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nconst schema = yup.object().shape({\r\n  name: yup.string().required(),\r\n  caption: yup.string().required(),\r\n  url: yup\r\n    .string()\r\n    .matches(\r\n      /((https?):\\/\\/)?(www.)?[a-z0-9]+(\\.[a-z]{2,}){1,3}(#?\\/?[a-zA-Z0-9#]+)*\\/?(\\?[a-zA-Z0-9-_]+=[a-zA-Z0-9-%]+&?)?$/,\r\n      \"Enter correct url!\"\r\n    )\r\n    .required(),\r\n});\r\n\r\nexport default function FormComponent() {\r\n  const { addToast } = useToasts();\r\n  const initialState = {\r\n    name: \"\",\r\n    caption: \"\",\r\n    url: \"\",\r\n    id: \"\",\r\n  };\r\n\r\n  const { register, handleSubmit, errors } = useForm({\r\n    resolver: yupResolver(schema),\r\n  });\r\n  const [meme, setMeme] = useState(initialState);\r\n  const saveMemes = () => {\r\n    console.log(\"Im here\");\r\n    var data = {\r\n      name: meme.name,\r\n      url: meme.url,\r\n      caption: meme.caption,\r\n      id: meme.id,\r\n    };\r\n    XmemeService.submitMemes(data);\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setMeme({ ...meme, [name]: value });\r\n  };\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AwesomeButton type=\"primary\" ripple onPress={handleClickOpen}>\r\n        Submit 🚀\r\n      </AwesomeButton>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Hey👋</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Start your Meme Making Journey😀Publish Your meme Now😍\r\n          </DialogContentText>\r\n\r\n          <Form>\r\n            <Form.Group controlId=\"GiveName\">\r\n              <Form.Label>Name*</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                id=\"Name\"\r\n                placeholder=\"Enter Your Name\"\r\n                onChange={handleInputChange}\r\n                ref={register}\r\n                value={meme.name}\r\n                name=\"name\"\r\n              />\r\n              {errors.name && <h7>Name is required</h7>}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"Give Caption\">\r\n              <Form.Label>Caption*</Form.Label>\r\n              <Form.Control\r\n                id=\"caption\"\r\n                type=\"text\"\r\n                placeholder=\"Give some Funny Caption\"\r\n                onChange={handleInputChange}\r\n                ref={register}\r\n                value={meme.caption}\r\n                name=\"caption\"\r\n              />\r\n              {errors.name && <h6>Caption is required</h6>}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"GiveUrl\">\r\n              <Form.Label>URL*</Form.Label>\r\n              <Form.Control\r\n                id=\"caption\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Image Url with Http\"\r\n                onChange={handleInputChange}\r\n                ref={register}\r\n                value={meme.url}\r\n                name=\"url\"\r\n              />\r\n              {errors.name && <h6>Enter Valid URL</h6>}\r\n            </Form.Group>\r\n            <DialogActions>\r\n              <Button\r\n                variant=\"outline-danger\"\r\n                type=\"cancel\"\r\n                onClick={handleClose}\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                variant=\"outline-primary\"\r\n                type=\"submit\"\r\n                onClick={handleSubmit(saveMemes)}\r\n              >\r\n                Submit\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import EmojiReact from \"react-emoji-react\";\r\nimport React, { Component } from \"react\";\r\n\r\nconst emojis = [\r\n  {\r\n    name: \"rage\",\r\n    count: 0,\r\n  },\r\n  {\r\n    name: \"blush\",\r\n    count: 0,\r\n  },\r\n  {\r\n    name: 100,\r\n    count: 0,\r\n  },\r\n  {\r\n    name: \"grinning\",\r\n    count: 0,\r\n  },\r\n];\r\n\r\nexport default class ReactingComponent extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      emojis,\r\n    };\r\n  }\r\n\r\n  onReaction(name) {\r\n    const emojis = this.state.emojis.map((emoji) => {\r\n      if (emoji.name === name) {\r\n        emoji.count += 1;\r\n      }\r\n      return emoji;\r\n    });\r\n    this.setState({ emojis });\r\n  }\r\n\r\n  onEmojiClick(name) {\r\n    console.log(name);\r\n    const emojis = this.state.emojis.concat([{ name, count: 1 }]);\r\n    this.setState({ emojis });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <EmojiReact\r\n        reactions={this.state.emojis}\r\n        onReaction={(name) => this.onReaction(name)}\r\n        onEmojiClick={(name) => this.onEmojiClick(name)}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport React from \"react\";\r\nimport XmemeService from \"../service/XmemeService\";\r\nimport { useState } from \"react\";\r\nimport \"react-awesome-button/dist/styles.css\";\r\nimport { AwesomeButton } from \"react-awesome-button\";\r\nimport styles from \"../theme-blue.css\";\r\nimport * as yup from \"yup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport { useEffect } from \"react\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nconst schema = yup.object().shape({\r\n  // name: yup.string().required(),\r\n  caption: yup.string().required(),\r\n  url: yup\r\n    .string()\r\n    .matches(\r\n      /((https?):\\/\\/)?(www.)?[a-z0-9]+(\\.[a-z]{2,}){1,3}(#?\\/?[a-zA-Z0-9#]+)*\\/?(\\?[a-zA-Z0-9-_]+=[a-zA-Z0-9-%]+&?)?$/,\r\n      \"Enter correct url!\"\r\n    )\r\n    .required(),\r\n});\r\n\r\nexport default function UpdateComponent(props) {\r\n  const { addToast } = useToasts();\r\n\r\n  const initialState = {\r\n    name: \"\",\r\n    caption: \"\",\r\n    url: \"\",\r\n    id: \"\",\r\n  };\r\n\r\n  const { register, handleSubmit, errors } = useForm({\r\n    resolver: yupResolver(schema),\r\n  });\r\n  const [meme, setMeme] = useState(initialState);\r\n  useEffect(() => {\r\n    getMemes(props.id);\r\n  }, [props.id]);\r\n\r\n  const getMemes = (id) => {\r\n    XmemeService.getMemesById(id).then((response) => {\r\n      setMeme(response.data);\r\n    });\r\n  };\r\n  const saveMemes = () => {\r\n    console.log(\"Im here\");\r\n    var data = {\r\n      name: meme.name,\r\n      url: meme.url,\r\n      caption: meme.caption,\r\n      id: meme.id,\r\n    };\r\n    XmemeService.UpdateMemes(data, data.id);\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setMeme({ ...meme, [name]: value });\r\n  };\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <IconButton aria-label=\"settings\" onClick={handleClickOpen}>\r\n        <MoreVertIcon />\r\n      </IconButton>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Hey👋</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Start your Meme Making Journey😀Publish Your meme Now😍\r\n          </DialogContentText>\r\n\r\n          <Form>\r\n            <Form.Group controlId=\"GiveName\">\r\n              <Form.Label>Name*</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                id=\"Name\"\r\n                placeholder=\"Enter Your Name\"\r\n                // onChange={handleInputChange}\r\n                value={meme.name}\r\n                name=\"name\"\r\n                disabled=\"true\"\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"Give Caption\">\r\n              <Form.Label>Caption*</Form.Label>\r\n              <Form.Control\r\n                id=\"caption\"\r\n                type=\"text\"\r\n                placeholder=\"Give some Funny Caption\"\r\n                onChange={handleInputChange}\r\n                ref={register}\r\n                value={meme.caption}\r\n                name=\"caption\"\r\n              />\r\n              {errors.caption && <h6>Caption is required</h6>}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"GiveUrl\">\r\n              <Form.Label>URL*</Form.Label>\r\n              <Form.Control\r\n                id=\"caption\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Image Url with Http\"\r\n                onChange={handleInputChange}\r\n                ref={register}\r\n                value={meme.url}\r\n                name=\"url\"\r\n              />\r\n              {errors.url && <h6>Enter Valid URL</h6>}\r\n            </Form.Group>\r\n            <DialogActions>\r\n              <Button\r\n                variant=\"outline-danger\"\r\n                type=\"cancel\"\r\n                onClick={handleClose}\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                variant=\"outline-primary\"\r\n                type=\"submit\"\r\n                onClick={handleSubmit(saveMemes)}\r\n              >\r\n                Submit\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import { Grid } from \"@material-ui/core\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, { useLayoutEffect, useState } from \"react\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport XmemeService from \"../service/XmemeService\";\r\nimport ReactingComponent from \"./emoji\";\r\nimport UpdateComponent from \"./UpdateComponent\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 250,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"60%\", // 16:9\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n    width: theme.spacing(3),\r\n    height: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function ImageFeed() {\r\n  const { addToast } = useToasts();\r\n\r\n  const data = {\r\n    i: [1],\r\n  };\r\n  const classes = useStyles();\r\n\r\n  const [memes, setmemes] = useState([]);\r\n\r\n  useLayoutEffect(() => {\r\n    getMemes();\r\n  }, [memes]);\r\n\r\n  const getMemes = () => {\r\n    XmemeService.getMemes().then((response) => {\r\n      if (response.type === \"Success\") setmemes(response.data);\r\n      else {\r\n        addToast(response.message, {\r\n          appearance: \"error\",\r\n          autoDismiss: true,\r\n        });\r\n      }\r\n    });\r\n  };\r\n  return data.i.map((elem) => (\r\n    <div style={{ padding: 20 }}>\r\n      <Grid\r\n        container\r\n        spacing={2}\r\n        direction=\"row\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"flex-start\"\r\n      >\r\n        {memes.map((meme) => (\r\n          <Grid item xs={3}>\r\n            <Card className={classes.root}>\r\n              <CardHeader\r\n                avatar={\r\n                  <Avatar aria-label=\"Name\" className={classes.avatar}>\r\n                    {meme.name.charAt(0)}\r\n                  </Avatar>\r\n                }\r\n                action={<UpdateComponent id={meme.id} />}\r\n                title={meme.name}\r\n              />\r\n\r\n              <CardMedia\r\n                className={classes.media}\r\n                image={meme.url}\r\n                title={meme.name + \"'s Meme\"}\r\n              />\r\n              <CardContent>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                  {meme.caption}\r\n                </Typography>\r\n              </CardContent>\r\n              <CardActions disableSpacing>\r\n                <ReactingComponent />\r\n              </CardActions>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  ));\r\n}\r\n","import React from 'react';\r\n\r\nexport default function FooterComponenet(){\r\n\r\n  \r\n    return(\r\n        <footer className =\"footer\">\r\n            <div>\r\n                <div>\r\n                    <center>Made with ❤️<a href = \"https://www.linkedin.com/in/aabhashtiwari\"> By Aabhash</a></center>\r\n                </div>\r\n                </div>\r\n                </footer>\r\n    );\r\n}","import \"./App.css\";\nimport { lightTheme, darkTheme } from \"./Components/Themes\";\nimport { useDarkMode } from \"./Components/useDarkMode\";\nimport { GlobalStyles } from \"./Components/Globalstyle\";\nimport { ThemeProvider } from \"styled-components\";\nimport Toggle from \"./Components/Toggler\";\nimport Typical from \"react-typical\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport logo from \"./meme2.png\";\nimport Grid from \"@material-ui/core/Grid\";\nimport FormComponenet from \"./Components/FormComponent\";\nimport React from \"react\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ImageFeed from \"./Components/ImageFeed\";\nimport FooterComponenet from \"./Components/FooterComponenet\";\nimport UpdateComponent from \"./Components/UpdateComponent\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { ToastProvider } from \"react-toast-notifications\";\nfunction App() {\n  const [theme, themeToggler, mountedComponent] = useDarkMode();\n  const themeMode = theme === \"light\" ? lightTheme : darkTheme;\n\n  if (!mountedComponent) return <div />;\n\n  return (\n    <ToastProvider>\n    <ThemeProvider theme={themeMode}>\n      <>\n        <GlobalStyles />\n        <div className=\"App\">\n          <>\n            <Navbar>\n              <Navbar.Brand href=\"#home\">\n                <img\n                  src={logo}\n                  width=\"80\"\n                  height=\"60\"\n                  className=\"d-inline-block align-top\"\n                  alt=\"Logo\"\n                />\n              </Navbar.Brand>\n              <Grid container item xs={4} sm={3} alignItems=\"flex-end\">\n                <Typical\n                  steps={[\"Hey👋\", 1000, \"Hey Meme Lover👋\", 500]}\n                  loop={2}\n                  wrapper=\"p\"\n                />\n              </Grid>\n              <Grid\n                container\n                item\n                xs={6}\n                sm={3}\n                alignItems=\"flex-end\"\n                spacing={16}\n              ></Grid>\n              <Grid container item xs={4} sm={3} alignItems=\"flex-end\">\n                XMEME STREAMER\n              </Grid>\n\n              <Grid container item xs={4}></Grid>\n              <Grid container item xs={4}>\n                <FormComponenet />\n                <Toggle theme={theme} toggleTheme={themeToggler} />\n              </Grid>\n            </Navbar>\n          </>\n          <Divider />\n          <ImageFeed />\n        </div>\n\n        <FooterComponenet />\n      </>\n    </ThemeProvider>\n    </ToastProvider>\n  );\n}\n\nexport default App;\n","import { useEffect, useState } from 'react';\r\nexport const useDarkMode = () => {\r\n    const [theme, setTheme] = useState('light');\r\n    const [mountedComponent, setMountedComponent] = useState(false)\r\n    const setMode = mode => {\r\n        window.localStorage.setItem('theme', mode)\r\n        setTheme(mode)\r\n    };\r\n\r\n    const themeToggler = () => {\r\n        theme === 'light' ? setMode('dark') : setMode('light')\r\n    };\r\n\r\n    useEffect(() => {\r\n        const localTheme = window.localStorage.getItem('theme');\r\n        localTheme ? setTheme(localTheme) : setMode('light')\r\n        setMountedComponent(true)\r\n    }, []);\r\n\r\n    return [theme, themeToggler, mountedComponent]\r\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n import \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"@fontsource/stalinist-one\" // Defaults to weight 400.\n\n\n// 2. Extend the theme to include custom colors, fonts, etc\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}